name: Windows Build

on:
  push:
    branches: [ "devwin" ]
  pull_request:
    branches: [ "devwin" ]
  workflow_call:


jobs:
  windows-msys2:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: UCRT64,  env: ucrt-x86_64,  build: Release }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: ${{matrix.sys}}
          install: >-
            base-devel
            mingw-w64-${{matrix.env}}-toolchain
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-ninja
            mingw-w64-${{matrix.env}}-yaml-cpp
            mingw-w64-${{matrix.env}}-curl
            mingw-w64-${{matrix.env}}-nlohmann_json
            mingw-w64-${{matrix.env}}-gtest

      - name: Configure CMake
        shell: msys2 {0}
        run: |
          cmake -G Ninja -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build }} \
            -DMSYS64_ROOT="D:/a/_temp/msys64" \
            -DBUILD_TESTING=OFF

      - name: Build
        shell: msys2 {0}
        run: |
          cmake --build build --config ${{ matrix.build }} -j $(nproc)

      # - name: Test
      #   shell: msys2 {0}
      #   working-directory: build
      #   run: |
      #     ctest --output-on-failure -C ${{ matrix.build }}

      - name: Create Package
        shell: msys2 {0}
        run: |
          cd build
          cpack -G ZIP -C ${{ matrix.build }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: voice-assistant-${{ matrix.sys }}-${{ matrix.build }}
          path: build/voice-assistant-*.zip 
          retention-days: 3
